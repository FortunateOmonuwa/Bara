# ========== Build & Publish ==========
FROM mcr.microsoft.com/dotnet/sdk:8.0 AS build
ARG BUILD_CONFIGURATION=Release
WORKDIR /src

# Copy sln and project files to enable restore caching
COPY Backend.sln ./
COPY Bara.API/Bara.API.csproj Bara.API/
COPY Infrastructure/Infrastructure.csproj Infrastructure/
COPY Services/Services.csproj Services/
COPY SharedModule/SharedModule.csproj SharedModule/
COPY UserModule/UserModule.csproj UserModule/
COPY TransactionModule/TransactionModule.csproj TransactionModule/
COPY ScriptModule/ScriptModule.csproj ScriptModule/
COPY BaraTests/BaraTests.csproj BaraTests/

RUN dotnet restore Backend.sln

# Copy the rest of the source
COPY . .

# Publish in one go (build happens inside publish)
WORKDIR /src/Bara.API
RUN dotnet publish -c $BUILD_CONFIGURATION -o /app/publish \
    /p:UseAppHost=false \
    /p:PublishTrimmed=false \
    /p:PublishReadyToRun=false

# ========== Runtime ==========
FROM mcr.microsoft.com/dotnet/aspnet:8.0 AS runtime
WORKDIR /app

# Non-root user for safety
RUN groupadd -r appgroup && useradd -r -g appgroup appuser

# curl for HEALTHCHECKs
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Copy published output and set ownership in one shot
COPY --chown=appuser:appgroup --from=build /app/publish .

# logs dir 
RUN mkdir -p /app/Logs && chown -R appuser:appgroup /app/Logs

USER appuser

# App config
ENV ASPNETCORE_ENVIRONMENT=Production
ENV ASPNETCORE_URLS=http://+:8080

EXPOSE 8080

# Healthcheck 
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -fsS http://localhost:8080/health || exit 1

ENTRYPOINT ["dotnet", "Bara.API.dll"]
